# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'skillselect.ui'
#
# Created by: PyQt5 UI code generator 5.8.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_skillselect(object):
    def setupUi(self, skillselect):
        skillselect.setObjectName("skillselect")
        skillselect.resize(1300, 540)
        self.splitter_7 = QtWidgets.QSplitter(skillselect)
        self.splitter_7.setGeometry(QtCore.QRect(10, 10, 351, 26))
        self.splitter_7.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_7.setObjectName("splitter_7")
        self.label_3 = QtWidgets.QLabel(self.splitter_7)
        self.label_3.setObjectName("label_3")
        self.comboBox = QtWidgets.QComboBox(self.splitter_7)
        self.comboBox.setObjectName("comboBox")
        self.skillTableWidget = QtWidgets.QTableWidget(skillselect)
        self.skillTableWidget.setGeometry(QtCore.QRect(270, 80, 991, 111))
        self.skillTableWidget.setObjectName("skillTableWidget")
        self.skillTableWidget.setColumnCount(31)
        self.skillTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(25, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(26, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(27, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(28, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(29, item)
        item = QtWidgets.QTableWidgetItem()
        self.skillTableWidget.setHorizontalHeaderItem(30, item)
        self.bombTableWidget = QtWidgets.QTableWidget(skillselect)
        self.bombTableWidget.setGeometry(QtCore.QRect(270, 410, 991, 121))
        self.bombTableWidget.setObjectName("bombTableWidget")
        self.bombTableWidget.setColumnCount(26)
        self.bombTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.bombTableWidget.setHorizontalHeaderItem(25, item)
        self.buffTableWidget = QtWidgets.QTableWidget(skillselect)
        self.buffTableWidget.setGeometry(QtCore.QRect(270, 240, 991, 121))
        self.buffTableWidget.setObjectName("buffTableWidget")
        self.buffTableWidget.setColumnCount(21)
        self.buffTableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.buffTableWidget.setHorizontalHeaderItem(20, item)
        self.label_5 = QtWidgets.QLabel(skillselect)
        self.label_5.setGeometry(QtCore.QRect(450, 50, 151, 21))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(skillselect)
        self.label_6.setGeometry(QtCore.QRect(450, 210, 101, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(skillselect)
        self.label_7.setGeometry(QtCore.QRect(450, 380, 111, 16))
        self.label_7.setObjectName("label_7")
        self.splitter = QtWidgets.QSplitter(skillselect)
        self.splitter.setGeometry(QtCore.QRect(30, 410, 221, 121))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.label_2 = QtWidgets.QLabel(self.splitter)
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label_2.setObjectName("label_2")
        self.bombListWidget = QtWidgets.QListWidget(self.splitter)
        self.bombListWidget.setMaximumSize(QtCore.QSize(16777215, 100))
        self.bombListWidget.setObjectName("bombListWidget")
        self.widget = QtWidgets.QWidget(skillselect)
        self.widget.setGeometry(QtCore.QRect(31, 80, 221, 111))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.skillLineEdit = QtWidgets.QLineEdit(self.widget)
        self.skillLineEdit.setObjectName("skillLineEdit")
        self.horizontalLayout.addWidget(self.skillLineEdit)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.skillListWidget = QtWidgets.QListWidget(self.widget)
        self.skillListWidget.setObjectName("skillListWidget")
        self.verticalLayout_2.addWidget(self.skillListWidget)
        self.widget1 = QtWidgets.QWidget(skillselect)
        self.widget1.setGeometry(QtCore.QRect(32, 240, 221, 121))
        self.widget1.setObjectName("widget1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_4 = QtWidgets.QLabel(self.widget1)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.buffLineEdit = QtWidgets.QLineEdit(self.widget1)
        self.buffLineEdit.setObjectName("buffLineEdit")
        self.horizontalLayout_2.addWidget(self.buffLineEdit)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.buffListWidget = QtWidgets.QListWidget(self.widget1)
        self.buffListWidget.setObjectName("buffListWidget")
        self.verticalLayout.addWidget(self.buffListWidget)

        self.retranslateUi(skillselect)
        QtCore.QMetaObject.connectSlotsByName(skillselect)

    def retranslateUi(self, skillselect):
        _translate = QtCore.QCoreApplication.translate
        skillselect.setWindowTitle(_translate("skillselect", "技能查询器"))
        self.label_3.setText(_translate("skillselect", "       数据库"))
        item = self.skillTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("skillselect", "SkillID"))
        item.setToolTip(_translate("skillselect", "ID"))
        item = self.skillTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("skillselect", "Name"))
        item.setToolTip(_translate("skillselect", "技能名称"))
        item = self.skillTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("skillselect", "Display"))
        item.setToolTip(_translate("skillselect", "技能表现表ID t_s_skill_performa"))
        item = self.skillTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("skillselect", "LevelLimit"))
        item.setToolTip(_translate("skillselect", "激活技能或解锁战斗道具的角色等级"))
        item = self.skillTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("skillselect", "NextSkill"))
        item.setToolTip(_translate("skillselect", "下一等级ID"))
        item = self.skillTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("skillselect", "CostSkillPoint"))
        item.setToolTip(_translate("skillselect", "升级下一级技能所需消耗技能点"))
        item = self.skillTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("skillselect", "CostGold"))
        item.setToolTip(_translate("skillselect", "升级下一级技能所需消耗银币"))
        item = self.skillTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("skillselect", "FightingForce"))
        item.setToolTip(_translate("skillselect", "战斗力"))
        item = self.skillTableWidget.horizontalHeaderItem(8)
        item.setText(_translate("skillselect", "Type"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>主动技能 0，永久被动技能：</p><p>常驻生效,属性值直接添加在角色面板或进入战斗场景后自动施加buff --目前无效</p><p> 1，被动技能：选定后，进入战斗场景后自动施加buff </p><p>2，主动技能：选定后，需使用才可生效 </p><p>3，必杀技：始终与武器捆绑 </p><p>4，公共技能 </p><p>5，道具技能 </p><p>6，宠物技能</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(9)
        item.setText(_translate("skillselect", "MutualExclusion"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>技能自身所属的分类</p><p>1,替换武器</p><p>2,跳过回合</p><p>3,必杀技</p><p>4,旧</p><p>5,特殊</p><p>0,常规</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(10)
        item.setText(_translate("skillselect", "Compatible"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>兼容</p><p>本技能兼容的分类</p><p>使用了MutualExclusion类型以后，还能使用的技能类型</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(11)
        item.setText(_translate("skillselect", "Cooldown"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p><span style=\" font-family:\'微软雅黑\'; font-size:11px; color:#000000;\">使用的冷却时间 施放技能间隔，</span></p><p><span style=\" font-family:\'微软雅黑\'; font-size:11px; color:#000000;\">施放技能的回合后开始每到自身回合</span></p><p><span style=\" font-family:\'微软雅黑\'; font-size:11px; color:#000000;\">结束-1</span></p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(12)
        item.setText(_translate("skillselect", "TimesPerTurn"))
        item.setToolTip(_translate("skillselect", "每回合使用次数限定"))
        item = self.skillTableWidget.horizontalHeaderItem(13)
        item.setText(_translate("skillselect", "CostActPoint"))
        item.setToolTip(_translate("skillselect", "使用技能需要消耗消耗行动力数量"))
        item = self.skillTableWidget.horizontalHeaderItem(14)
        item.setText(_translate("skillselect", "CostAnger"))
        item.setToolTip(_translate("skillselect", "消耗怒气"))
        item = self.skillTableWidget.horizontalHeaderItem(15)
        item.setText(_translate("skillselect", "Buff"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>状态</p><p>可能填写多个|分隔</p><p>buffer表</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(16)
        item.setText(_translate("skillselect", "Delay"))
        item.setToolTip(_translate("skillselect", "延迟值"))
        item = self.skillTableWidget.horizontalHeaderItem(17)
        item.setText(_translate("skillselect", "IsEndTurn"))
        item.setToolTip(_translate("skillselect", "是否结束回合"))
        item = self.skillTableWidget.horizontalHeaderItem(18)
        item.setText(_translate("skillselect", "User"))
        item.setToolTip(_translate("skillselect", "使用者\n"
"0，玩家；1，NPC。"))
        item = self.skillTableWidget.horizontalHeaderItem(19)
        item.setText(_translate("skillselect", "UseType"))
        item.setToolTip(_translate("skillselect", "技能Tag分类用于AI调用\n"
"可配置多项，竖线分割\n"
"（主动技能\n"
"0，永久被动技能：常驻生效，属性值直接添加在角色面板或进入战斗场景后自动施加buff --目前无效\n"
"1，被动技能：选定后，进入战斗场景后自动施加buff\n"
"2，主动技能：选定后，需使用才可生效\n"
"3，必杀技：始终与武器捆绑\n"
"4，公共技能\n"
"5，道具技能\n"
"6，宠物技能-非治疗\n"
"7，未知\n"
"8，未知\n"
"9：宠物技能-治疗类"))
        item = self.skillTableWidget.horizontalHeaderItem(20)
        item.setText(_translate("skillselect", "SubType"))
        item.setToolTip(_translate("skillselect", "技能子类型\n"
"0，无特殊子类型\n"
"1，普通技能-武器技能\n"
"2，普通技能-武器必杀技\n"
"3，普通技能-通用技能\n"
"4，普通技能-被动技能\n"
"5，道具技能\n"
"6，宠物技能\n"
"7，无法首发的道具技能"))
        item = self.skillTableWidget.horizontalHeaderItem(21)
        item.setText(_translate("skillselect", "IsAttackSkill"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>是否是攻击技能</p><p>0，非攻击技能</p><p>1，攻击技能</p><p>----无效字段</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(22)
        item.setText(_translate("skillselect", "Damage"))
        item.setToolTip(_translate("skillselect", "杀伤权重"))
        item = self.skillTableWidget.horizontalHeaderItem(23)
        item.setText(_translate("skillselect", "Dig"))
        item.setToolTip(_translate("skillselect", "挖坑权重"))
        item = self.skillTableWidget.horizontalHeaderItem(24)
        item.setText(_translate("skillselect", "ButtonOrder"))
        item.setToolTip(_translate("skillselect", "技能在按钮上的次序"))
        item = self.skillTableWidget.horizontalHeaderItem(25)
        item.setText(_translate("skillselect", "Level"))
        item.setToolTip(_translate("skillselect", "技能等级"))
        item = self.skillTableWidget.horizontalHeaderItem(26)
        item.setText(_translate("skillselect", "BasicSkill"))
        item.setToolTip(_translate("skillselect", "技能等级为1时的ID"))
        item = self.skillTableWidget.horizontalHeaderItem(27)
        item.setText(_translate("skillselect", "CostDonate"))
        item.setToolTip(_translate("skillselect", "学习此技能消耗的贡献"))
        item = self.skillTableWidget.horizontalHeaderItem(28)
        item.setText(_translate("skillselect", "FightUseCount"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>战斗中可使用次数</p><p>填-1为无限次使用</p></body></html>"))
        item = self.skillTableWidget.horizontalHeaderItem(29)
        item.setText(_translate("skillselect", "CanHold"))
        item.setToolTip(_translate("skillselect", "角色技能专用，是否允许战前携带"))
        item = self.skillTableWidget.horizontalHeaderItem(30)
        item.setText(_translate("skillselect", "Sort"))
        item.setToolTip(_translate("skillselect", "道具技能专用。在客户端选择技能时的排序。"))
        item = self.bombTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("skillselect", "ID"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>ID</p><p>102固定ID</p><p>0～94999是道具类使用的炮弹</p><p>95000~99999是套装置换用</p><p>100000是常规武器用的炮弹</p><p>500000是副本NPC使用的炮弹</p><p>对于常规武器来说，</p><p>编号（两位），</p><p>变型等级（一位），</p><p>主次（一位1，主炮弹，2次炮弹），</p><p>编号数（一位）</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("skillselect", "Name"))
        item.setToolTip(_translate("skillselect", "名称"))
        item = self.bombTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("skillselect", "PerformanceID"))
        item.setToolTip(_translate("skillselect", "炮弹表现表ID\n"
"\n"
"t_s_bomb_performance表"))
        item = self.bombTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("skillselect", "AddOrsubtract"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>增强/减弱</p><p>1，减弱</p><p>2，增强</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("skillselect", "EffectDecay"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>区域效果衰减</p><p>内层百分比半径_内层百分比效果/</p><p>外层百分比半径_外层百分比效果</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("skillselect", "Radius"))
        item.setToolTip(_translate("skillselect", "爆炸范围"))
        item = self.bombTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("skillselect", "TriggerType"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>触发爆炸</p><p>0，无</p><p>1|4，地表</p><p>2，友方角色</p><p>3，敌方角色</p><p>4,不可炸的地表</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("skillselect", "Effective"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>可生效</p><p>1，地表</p><p>2，友方角色</p><p>3，敌方角色</p><p>4，不可破坏地形</p><p>5，物件</p><p>6，队友</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(8)
        item.setText(_translate("skillselect", "Effect"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>效果</p><p>DerivationBomb(绝对伤害值)适用于物件爆炸</p><p>KickFlyFixedAngle(力度必填，角度必填，方向-1向左0根据爆炸点判断1向右)</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(9)
        item.setText(_translate("skillselect", "HitAnger"))
        item.setToolTip(_translate("skillselect", "命中增加怒气"))
        item = self.bombTableWidget.horizontalHeaderItem(10)
        item.setText(_translate("skillselect", "MissAnger"))
        item.setToolTip(_translate("skillselect", "未命中增加怒气"))
        item = self.bombTableWidget.horizontalHeaderItem(11)
        item.setText(_translate("skillselect", "HitHole"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>击中角色弹坑</p><p>resweaponcrack</p><p>弹坑大小同资源大小</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(12)
        item.setText(_translate("skillselect", "HitEdge"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>击中角色弹坑边缘</p><p>resweaponcrack</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(13)
        item.setText(_translate("skillselect", "MissHole"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>击中地面弹坑</p><p>resweaponcrack</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(14)
        item.setText(_translate("skillselect", "MissEdge"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>击中地面弹坑边缘</p><p>resweaponcrack</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(15)
        item.setText(_translate("skillselect", "FlySpeed"))
        item.setToolTip(_translate("skillselect", "飞行播放速度"))
        item = self.bombTableWidget.horizontalHeaderItem(16)
        item.setText(_translate("skillselect", "WindForce"))
        item.setToolTip(_translate("skillselect", "风力因素"))
        item = self.bombTableWidget.horizontalHeaderItem(17)
        item.setText(_translate("skillselect", "AirResistance"))
        item.setToolTip(_translate("skillselect", "空气因素"))
        item = self.bombTableWidget.horizontalHeaderItem(18)
        item.setText(_translate("skillselect", "Gravity"))
        item.setToolTip(_translate("skillselect", "重力因素"))
        item = self.bombTableWidget.horizontalHeaderItem(19)
        item.setText(_translate("skillselect", "Mass"))
        item.setToolTip(_translate("skillselect", "质量"))
        item = self.bombTableWidget.horizontalHeaderItem(20)
        item.setText(_translate("skillselect", "ExplodeTime4"))
        item.setToolTip(_translate("skillselect", "爆炸4表现时间（ms）"))
        item = self.bombTableWidget.horizontalHeaderItem(21)
        item.setText(_translate("skillselect", "ExplodeTime3"))
        item = self.bombTableWidget.horizontalHeaderItem(22)
        item.setText(_translate("skillselect", "ExplodeTime1"))
        item = self.bombTableWidget.horizontalHeaderItem(23)
        item.setText(_translate("skillselect", "ExplodeTime2"))
        item = self.bombTableWidget.horizontalHeaderItem(24)
        item.setText(_translate("skillselect", "EffectiveMode"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>生效方式</p><p>1，普通</p><p>2，炮弹不会爆炸，效果影响炮弹穿过的角色</p></body></html>"))
        item = self.bombTableWidget.horizontalHeaderItem(25)
        item.setText(_translate("skillselect", "FriendEffect"))
        item.setToolTip(_translate("skillselect", "只对已方的炮弹效果"))
        item = self.buffTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("skillselect", "ID"))
        item.setToolTip(_translate("skillselect", "ID"))
        item = self.buffTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("skillselect", "Name"))
        item.setToolTip(_translate("skillselect", "Buff效果名称"))
        item = self.buffTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("skillselect", "Display"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>Buff表现表ID</p><p>读取表t_s_buffer_performance</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("skillselect", "Level"))
        item.setToolTip(_translate("skillselect", "状态等级"))
        item = self.buffTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("skillselect", "Dispersed"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>可被驱散</p><p>不可被驱散效果清除:0</p><p>可被驱散效果清除:1</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("skillselect", "Target"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>状态施加的对象：</p><p>1，自身</p><p>5，场景内所有角色</p><p>6，场景内所有敌方角色</p><p>7，场景内所有友方角色</p><p>8，近战范围内一个仇恨目标（用户则为随机目标）</p><p>9，近战范围内全部仇恨目标</p><p>10，炮弹命中的目标</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("skillselect", "Effect"))
        item.setToolTip(_translate("skillselect", "状态效果"))
        item = self.buffTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("skillselect", "Superposition"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>可叠加最大层数</p><p>不论来源，同一个角色的叠加最大层数</p><p>叠加功能</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(8)
        item.setText(_translate("skillselect", "Immidiate"))
        item.setToolTip(_translate("skillselect", "立即生效"))
        item = self.buffTableWidget.horizontalHeaderItem(9)
        item.setText(_translate("skillselect", "EffectiveEvent"))
        item.setToolTip(_translate("skillselect", "产生效果的事件（buff生效节点0.7.5版本更新）\n"
"1：受到伤害之前\n"
"2：正在受到伤害\n"
"4：任意角色的行动回合开始\n"
"5：自己行动开始前\n"
"6：自己的行动回合开始 \n"
"7：自己受到伤害之前\n"
"8：自己的行动回合结束\n"
"9：击杀其他角色\n"
"12：自己开炮之后\n"
"18：受到致死伤害时\n"
"制造伤害之前\n"
"19:每一轮发射开炮前\n"
"20:每一发炮弹产生炮弹前\n"
"21:破冰移除效果专用事件\n"
"22:炮弹精准命中\n"
"23:每一轮发射开炮后（一轮内所有炮弹发射出来，三叉是是射三发）\n"
"24:普通轮次（类似19，仅限于普攻)开始前\n"
"25:必杀轮次（类似19，仅限于普攻)开始前\n"
"26:新增一个有益的buff(Harm为1)\n"
"27:移除一个有益的buff(Harm为1)\n"
"28：开始开炮前\n"
"29:炮弹爆炸产生弹坑前\n"
"30:治疗生效前\n"
"31:被炮弹命中生效前\n"
"32:在被炮弹命中造成伤害时(回合)\n"
"34:使用道具前\n"
"35:命中敌人破冰前\n"
"36：普通开炮前（28不含必杀）"))
        item = self.buffTableWidget.horizontalHeaderItem(10)
        item.setText(_translate("skillselect", "LebgthType"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>持续长度类型（buff消失节点）</p><p>同EffectiveEvent</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(11)
        item.setText(_translate("skillselect", "Length"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>持续长度</p><p>每当状态的获得者达到持续长度节点，</p><p>长度-1，至0则失去状况</p><p>持续长度</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(12)
        item.setText(_translate("skillselect", "Harm"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>技能类型，用于驱散、数量、无敌等判定</p><p>1，有益</p><p>0，有害</p><p>2，中立</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(13)
        item.setText(_translate("skillselect", "Remove"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>特别的移除buff条件</p><p>同EffectiveEvent</p><p>-1为生效后立即移除</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(14)
        item.setText(_translate("skillselect", "Probability"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>添加buff的几率</p><p>10000表示100%</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(15)
        item.setText(_translate("skillselect", "EffectProbability"))
        item.setToolTip(_translate("skillselect", "Buff效果生效的几率"))
        item = self.buffTableWidget.horizontalHeaderItem(16)
        item.setText(_translate("skillselect", "HiddenCD"))
        item.setToolTip(_translate("skillselect", "Buff效果内置冷却"))
        item = self.buffTableWidget.horizontalHeaderItem(17)
        item.setText(_translate("skillselect", "Tag"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>buff标签，用于驱散和免疫类型辅助</p><p>判定，多个用|分隔</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(18)
        item.setText(_translate("skillselect", "EffectCondition"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>对施加对象进一步判定条件</p><p>1,buffID：拥有指定buffID的单位</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(19)
        item.setText(_translate("skillselect", "ChangeProbabilityFlag"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>Buff效果添加是否受命中和抵抗的影响</p><p>0都不生效</p><p>1都生效</p><p>2只有命中生效</p><p>3只有抵抗生效</p></body></html>"))
        item = self.buffTableWidget.horizontalHeaderItem(20)
        item.setText(_translate("skillselect", "ChangeEffectProbabilityFlag"))
        item.setToolTip(_translate("skillselect", "<html><head/><body><p>Buff效果生效是否受命中和抵抗的影响</p><p>0都不生效</p><p>1都生效</p><p>2只有命中生效</p><p>3只有抵抗生效</p></body></html>"))
        self.label_5.setText(_translate("skillselect", "技能详细信息"))
        self.label_6.setText(_translate("skillselect", "BUFF详细信息"))
        self.label_7.setText(_translate("skillselect", "BOMB详细信息"))
        self.label_2.setText(_translate("skillselect", "                  Bomb"))
        self.label.setText(_translate("skillselect", "技能关键字"))
        self.skillLineEdit.setToolTip(_translate("skillselect", "输入技能关键字"))
        self.label_4.setText(_translate("skillselect", "BUFF关键字"))
        self.buffLineEdit.setToolTip(_translate("skillselect", "输入BUFF关键字"))

